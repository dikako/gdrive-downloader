plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'io.github.dikako'
version = '1.0.3'

java {
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.apis:google-api-services-drive:v3-rev20250511-2.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.37.1'
    implementation 'com.google.http-client:google-http-client-gson:1.47.1'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = project.group
            artifactId = 'gdrive-downloader'
            version = project.version

            pom {
                name = 'GDrive Downloader'
                description = 'A CLI tool and Java Library for downloading files from Google Drive using a service account'
                url = 'https://github.com/dikako/gdrive-downloader'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'dikako'
                        name = 'Fransiskus Andika Setiawan'
                        email = 'dikakoko@icloud.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/dikako/gdrive-downloader.git'
                    developerConnection = 'scm:git:ssh://github.com:dikako/gdrive-downloader.git'
                    url = 'https://github.com/dikako/gdrive-downloader'
                }
            }
        }
    }

    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/dikako/gdrive-downloader")

            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PUBLISH_TOKEN")
            }
        }
    }
}
